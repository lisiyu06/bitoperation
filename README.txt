1. LeetCode 136 ----- 只出现一次的数字
   
   使用异或
   时间复杂度： O(n) 。只需要将 nums 中的元素遍历一遍，所以时间复杂度就是 nums 中的元素个数。
   空间复杂度： O(1)

2. LeetCode 169 ----- 多数元素

   给定一个大小为 n 的数组，找到其中的多数元素。多数元素是指在数组中出现次数大于?? n/2 ??的元素。
   你可以假设数组是非空的，并且给定的数组总是存在多数元素。
   （直接遍历）

3. LeetCode 190 ----- 颠倒二进制位

   颠倒给定的 32 位无符号整数的二进制位。

4. LeetCode 191 ----- 位 1 的个数

   编写一个函数，输入是一个无符号整数，返回其二进制表达式中数字位数为 ‘1’的个数（也被称为汉明重量）。
   （直接遍历）

5. LeetCode 231 ----- 2 的幂

   给定一个整数，编写一个函数来判断它是否是 2 的幂次方。
   二进制中，2 的幂 只会有1 位是1（最高位）；
   因此，(n - 1)最高位是 0，其余位为 1；
   两者相与，为 0.

6. LeetCode 268 ----- 缺失数字

   给定一个包含 0, 1, 2, ..., n?中?n?个数的序列，找出 0 ... n?中没有出现在序列中的那个数。

7. LeetCode 371 ----- 两整数之和

   不使用运算符?+ 和?-，计算两整数 a?、b 之和。

8. LeetCode 389 ----- 找不同

   给定两个字符串 s 和 t，它们只包含小写字母。
   字符串?t?由字符串?s?随机重排，然后在随机位置添加一个字母。
   请找出在 t 中被添加的字母。

9. LeetCode 405 ----- 数字转换为十六进制数

   给定一个整数，编写一个算法将这个数转换为十六进制数。对于负整数，我们通常使用?补码运算?方法。
   
10.leetcode 191 ----- 位 1 的个数

   编写一个函数，输入是一个无符号整数，返回其二进制表达式中数字位数为 ‘1’?的个数（也被称为汉明重量）。

11. LeetCode 693 ----- 交替位二进制数

    给定一个正整数，检查他是否为交替位二进制数：
    换句话说，就是他的二进制数相邻的两个位数永不相等。
   